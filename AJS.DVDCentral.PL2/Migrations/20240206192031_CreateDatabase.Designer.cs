// <auto-generated />
using System;
using AJS.DVDCentral.PL2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AJS.DVDCentral.PL2.Migrations
{
    [DbContext(typeof(DVDCentralEntities))]
    [Migration("20240206192031_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblCart");

                    b.HasData(
                        new
                        {
                            Id = new Guid("990e4962-0cab-437b-a56f-5320f9d78776"),
                            UserId = new Guid("7a1192b7-66f7-4cb6-86e8-69ddcd23ed1d")
                        },
                        new
                        {
                            Id = new Guid("ae660828-abbf-40ca-b6c6-40619059f731"),
                            UserId = new Guid("6a555dc1-12a3-485e-89c3-a1966b96cefd")
                        });
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblCartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("MovieId");

                    b.ToTable("tblCartItem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b336dde-7b22-4348-924b-2fa2942e67fa"),
                            CartId = new Guid("990e4962-0cab-437b-a56f-5320f9d78776"),
                            MovieId = new Guid("46e5479a-cb0e-4d1b-a388-dae89736fc30"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("6c5a62bb-ebd2-4326-86ac-2e523e1da2f7"),
                            CartId = new Guid("990e4962-0cab-437b-a56f-5320f9d78776"),
                            MovieId = new Guid("99e7fc84-e21f-471c-b678-d633fa58c353"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("ee506f7b-f417-424f-9d52-34e3b4d2972a"),
                            CartId = new Guid("ae660828-abbf-40ca-b6c6-40619059f731"),
                            MovieId = new Guid("99e7fc84-e21f-471c-b678-d633fa58c353"),
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZIP")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id")
                        .HasName("PK_tblCustomer_Id");

                    b.ToTable("tblCustomer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7820d137-4a88-4fa3-bb38-792e0c392597"),
                            Address = "453 Oak Street",
                            City = "Fond du Lac",
                            FirstName = "Steve",
                            LastName = "Marin",
                            Phone = "9205879797",
                            State = "WI",
                            UserId = new Guid("7a1192b7-66f7-4cb6-86e8-69ddcd23ed1d"),
                            ZIP = "54935"
                        },
                        new
                        {
                            Id = new Guid("6c8c03c5-56ef-46e8-9d61-926db7bc6987"),
                            Address = "987 Willow Road",
                            City = "Slinger",
                            FirstName = "John",
                            LastName = "Doro",
                            Phone = "9202623345",
                            State = "WI",
                            UserId = new Guid("6a555dc1-12a3-485e-89c3-a1966b96cefd"),
                            ZIP = "56495"
                        },
                        new
                        {
                            Id = new Guid("5eefe923-6e61-459c-a985-5859a07cac42"),
                            Address = "159 Johnson Avenue",
                            City = "Allenton",
                            FirstName = "Brian",
                            LastName = "Foote",
                            Phone = "9202623415",
                            State = "WI",
                            UserId = new Guid("1e1e7a85-fa7a-46e1-8ce5-a6ffef1cd237"),
                            ZIP = "53142"
                        });
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblDirector", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblDirector_Id");

                    b.ToTable("tblDirector", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("64f3a8c2-c4c4-4de1-984f-f1b833c42adb"),
                            FirstName = "John",
                            LastName = "Avildsen"
                        },
                        new
                        {
                            Id = new Guid("ca0b1c64-4a73-43c7-99fd-58d587c42d4a"),
                            FirstName = "Steven",
                            LastName = "Spielberg"
                        },
                        new
                        {
                            Id = new Guid("9254a774-f57d-40c5-ac0e-ac75b1a39b28"),
                            FirstName = "Rob",
                            LastName = "Reiner"
                        },
                        new
                        {
                            Id = new Guid("4f529afc-ca05-4ce0-abac-d0d6a50f2632"),
                            FirstName = "George",
                            LastName = "Lucas"
                        },
                        new
                        {
                            Id = new Guid("594a5d2e-93ee-4a5f-bbdc-b1567b4f4581"),
                            FirstName = "Clint",
                            LastName = "Eastwood"
                        },
                        new
                        {
                            Id = new Guid("ae4da4d2-1e9c-4183-a843-f3b029b3a65b"),
                            FirstName = "Other",
                            LastName = "Other"
                        });
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblFormat", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblFormat_Id");

                    b.ToTable("tblFormat", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("82b46941-0e5d-46a3-8f40-a9e91536f458"),
                            Description = "VHS"
                        },
                        new
                        {
                            Id = new Guid("fb110472-8dad-44e7-ba69-48c87b45705f"),
                            Description = "DVD"
                        },
                        new
                        {
                            Id = new Guid("8cb86598-7753-47f5-8d21-c8d826672e31"),
                            Description = "Blu-Ray"
                        },
                        new
                        {
                            Id = new Guid("abd0dbf7-beae-4053-9e36-d3fb4798ba1b"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblGenre_Id");

                    b.ToTable("tblGenre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("39306760-9db8-4571-99c5-9650aa4666f5"),
                            Description = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("1122a214-a3ef-4781-8983-b8a5657e5305"),
                            Description = "Action"
                        },
                        new
                        {
                            Id = new Guid("41e9c411-d9ed-4d10-ba8a-e2081e4fd0fd"),
                            Description = "Sci-Fi"
                        },
                        new
                        {
                            Id = new Guid("e08fc682-701c-4749-9311-db3572bdd1a7"),
                            Description = "Horror"
                        },
                        new
                        {
                            Id = new Guid("ba38b0b9-d118-4047-9fa9-a1a3236602b0"),
                            Description = "Romance"
                        },
                        new
                        {
                            Id = new Guid("5b8fdf16-edb0-4940-970f-31b6bc3f99b0"),
                            Description = "Documentary"
                        },
                        new
                        {
                            Id = new Guid("0ee2675d-85a7-43dc-8156-9bdea6faaa81"),
                            Description = "Musical"
                        },
                        new
                        {
                            Id = new Guid("005e4e0b-0c72-4bd3-8c72-94641fb6f2b0"),
                            Description = "Mystery"
                        },
                        new
                        {
                            Id = new Guid("eafd0a37-a1fc-4456-bcc3-a4e877ddc326"),
                            Description = "Western"
                        },
                        new
                        {
                            Id = new Guid("bc9500b5-9f7f-41d2-8e37-0794ef19243b"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FormatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_tblMovie_Id");

                    b.HasIndex("DirectorId");

                    b.HasIndex("FormatId");

                    b.HasIndex("RatingId");

                    b.ToTable("tblMovie", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("46e5479a-cb0e-4d1b-a388-dae89736fc30"),
                            Cost = 6.9900000000000002,
                            Description = "Rocky is a 1976 American sports drama film directed by John G. Avildsen, written by and starring Sylvester Stallone.",
                            DirectorId = new Guid("64f3a8c2-c4c4-4de1-984f-f1b833c42adb"),
                            FormatId = new Guid("82b46941-0e5d-46a3-8f40-a9e91536f458"),
                            ImagePath = "Rocky.jpg",
                            Quantity = 2,
                            RatingId = new Guid("0df62934-4eaa-4f02-b644-5995ff9207c2"),
                            Title = "Rocky"
                        },
                        new
                        {
                            Id = new Guid("cf2cbf8f-4176-4aae-b857-e8ccb7db96fe"),
                            Cost = 6.9900000000000002,
                            Description = "Other",
                            DirectorId = new Guid("64f3a8c2-c4c4-4de1-984f-f1b833c42adb"),
                            FormatId = new Guid("82b46941-0e5d-46a3-8f40-a9e91536f458"),
                            ImagePath = "Rocky.jpg",
                            Quantity = 2,
                            RatingId = new Guid("0df62934-4eaa-4f02-b644-5995ff9207c2"),
                            Title = "Other"
                        },
                        new
                        {
                            Id = new Guid("99e7fc84-e21f-471c-b678-d633fa58c353"),
                            Cost = 8.9900000000000002,
                            Description = "Jaws is a 1975 American thriller film directed by Steven Spielberg and based on the Peter Benchley 1974 novel of the same name.",
                            DirectorId = new Guid("ca0b1c64-4a73-43c7-99fd-58d587c42d4a"),
                            FormatId = new Guid("fb110472-8dad-44e7-ba69-48c87b45705f"),
                            ImagePath = "Jaws1.jpg",
                            Quantity = 1,
                            RatingId = new Guid("60292baa-fe54-43b5-b943-bb12d859b088"),
                            Title = "Jaws"
                        },
                        new
                        {
                            Id = new Guid("857fafd7-548f-4673-9e02-061b78db2d09"),
                            Cost = 12.5,
                            Description = "The Princess Bride is a 1987 American fantasy adventure comedy film directed and co-produced by Rob Reiner, starring Cary Elwes, Robin Wright, Mandy Patinkin, Chris Sarandon, Wallace Shawn, André the Giant, and Christopher Guest.",
                            DirectorId = new Guid("9254a774-f57d-40c5-ac0e-ac75b1a39b28"),
                            FormatId = new Guid("8cb86598-7753-47f5-8d21-c8d826672e31"),
                            ImagePath = "PrincessBride.jpg",
                            Quantity = 4,
                            RatingId = new Guid("236f43c1-6c28-4f4a-ae87-7c6ae52a63f1"),
                            Title = "The Princess Bride"
                        },
                        new
                        {
                            Id = new Guid("ba384064-95c0-419e-ae5c-59535e3f815c"),
                            Cost = 10.5,
                            Description = "Indiana Jones and the Last Crusade is a 1989 American action-adventure film directed by Steven Spielberg, from a story co-written by executive producer George Lucas.",
                            DirectorId = new Guid("4f529afc-ca05-4ce0-abac-d0d6a50f2632"),
                            FormatId = new Guid("8cb86598-7753-47f5-8d21-c8d826672e31"),
                            ImagePath = "IndianaJonesLastCrusade.jpg",
                            Quantity = 2,
                            RatingId = new Guid("00ea341c-1e83-48d2-beee-cd54faa7ef3d"),
                            Title = "Indiana Jones and the Last Crusade"
                        },
                        new
                        {
                            Id = new Guid("c032744c-eee6-46c0-a9fe-a941f7682a78"),
                            Cost = 7.5,
                            Description = "Star Wars: Episode IV – A New Hope is a 1977 American epic space-opera film written and directed by George Lucas, produced by Lucasfilm and distributed by 20th Century Fox.",
                            DirectorId = new Guid("ca0b1c64-4a73-43c7-99fd-58d587c42d4a"),
                            FormatId = new Guid("fb110472-8dad-44e7-ba69-48c87b45705f"),
                            ImagePath = "StarWarsNewHope.jpg",
                            Quantity = 1,
                            RatingId = new Guid("60292baa-fe54-43b5-b943-bb12d859b088"),
                            Title = "Star Wars: Episode IV – A New Hope"
                        },
                        new
                        {
                            Id = new Guid("2b559b55-39a6-4b30-a948-ecfd944c5ddb"),
                            Cost = 9.9900000000000002,
                            Description = "Pale Rider is a 1985 American Western film produced and directed by Clint Eastwood, who also stars in the lead role.",
                            DirectorId = new Guid("ca0b1c64-4a73-43c7-99fd-58d587c42d4a"),
                            FormatId = new Guid("fb110472-8dad-44e7-ba69-48c87b45705f"),
                            ImagePath = "PaleRider.jpg",
                            Quantity = 1,
                            RatingId = new Guid("60292baa-fe54-43b5-b943-bb12d859b088"),
                            Title = "Pale Rider"
                        });
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblMovieGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblMovieGenre_Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("tblMovieGenre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("08454763-8a8f-468f-aea1-8ddb09c68a1a"),
                            GenreId = new Guid("41e9c411-d9ed-4d10-ba8a-e2081e4fd0fd"),
                            MovieId = new Guid("46e5479a-cb0e-4d1b-a388-dae89736fc30")
                        },
                        new
                        {
                            Id = new Guid("e14cc6ee-8ab7-4603-a5d2-6326ad0a4f4f"),
                            GenreId = new Guid("e08fc682-701c-4749-9311-db3572bdd1a7"),
                            MovieId = new Guid("46e5479a-cb0e-4d1b-a388-dae89736fc30")
                        },
                        new
                        {
                            Id = new Guid("13e07b4c-34d5-4209-8846-c2a305b9925a"),
                            GenreId = new Guid("5b8fdf16-edb0-4940-970f-31b6bc3f99b0"),
                            MovieId = new Guid("46e5479a-cb0e-4d1b-a388-dae89736fc30")
                        },
                        new
                        {
                            Id = new Guid("5ae93ca8-c4d1-47c3-badd-756990f1122e"),
                            GenreId = new Guid("41e9c411-d9ed-4d10-ba8a-e2081e4fd0fd"),
                            MovieId = new Guid("99e7fc84-e21f-471c-b678-d633fa58c353")
                        },
                        new
                        {
                            Id = new Guid("933a399b-d7e1-42be-b9c2-b8a1c6b0ef94"),
                            GenreId = new Guid("e08fc682-701c-4749-9311-db3572bdd1a7"),
                            MovieId = new Guid("99e7fc84-e21f-471c-b678-d633fa58c353")
                        },
                        new
                        {
                            Id = new Guid("ffbdb98b-de85-4cdd-a6df-b92272ee76b1"),
                            GenreId = new Guid("39306760-9db8-4571-99c5-9650aa4666f5"),
                            MovieId = new Guid("857fafd7-548f-4673-9e02-061b78db2d09")
                        },
                        new
                        {
                            Id = new Guid("0010d375-624f-45cd-98fd-1aece794011d"),
                            GenreId = new Guid("1122a214-a3ef-4781-8983-b8a5657e5305"),
                            MovieId = new Guid("857fafd7-548f-4673-9e02-061b78db2d09")
                        },
                        new
                        {
                            Id = new Guid("2b5b31eb-f5ba-4c3a-ace3-af805b6d3914"),
                            GenreId = new Guid("5b8fdf16-edb0-4940-970f-31b6bc3f99b0"),
                            MovieId = new Guid("857fafd7-548f-4673-9e02-061b78db2d09")
                        },
                        new
                        {
                            Id = new Guid("1f9d589d-8a9c-4f24-b9df-2d342d1df02b"),
                            GenreId = new Guid("e08fc682-701c-4749-9311-db3572bdd1a7"),
                            MovieId = new Guid("ba384064-95c0-419e-ae5c-59535e3f815c")
                        },
                        new
                        {
                            Id = new Guid("c2154424-0e8b-4555-b973-df3eed3831d8"),
                            GenreId = new Guid("5b8fdf16-edb0-4940-970f-31b6bc3f99b0"),
                            MovieId = new Guid("ba384064-95c0-419e-ae5c-59535e3f815c")
                        },
                        new
                        {
                            Id = new Guid("d5231164-a30d-45bf-8a4c-6032e5dda1eb"),
                            GenreId = new Guid("e08fc682-701c-4749-9311-db3572bdd1a7"),
                            MovieId = new Guid("c032744c-eee6-46c0-a9fe-a941f7682a78")
                        },
                        new
                        {
                            Id = new Guid("e4af561f-6ed8-40d8-acaa-24aec3569408"),
                            GenreId = new Guid("0ee2675d-85a7-43dc-8156-9bdea6faaa81"),
                            MovieId = new Guid("c032744c-eee6-46c0-a9fe-a941f7682a78")
                        },
                        new
                        {
                            Id = new Guid("8cfe160e-7a66-450c-963f-e6fd9350140f"),
                            GenreId = new Guid("005e4e0b-0c72-4bd3-8c72-94641fb6f2b0"),
                            MovieId = new Guid("2b559b55-39a6-4b30-a948-ecfd944c5ddb")
                        });
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ShipDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblOrder_Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("tblOrder", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("832c223f-0c55-4075-aba1-2edb520e7c59"),
                            CustomerId = new Guid("6c8c03c5-56ef-46e8-9d61-926db7bc6987"),
                            OrderDate = new DateTime(2017, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2017, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("6a555dc1-12a3-485e-89c3-a1966b96cefd")
                        },
                        new
                        {
                            Id = new Guid("73cc1a47-e4e6-442f-a869-9d1d20828689"),
                            CustomerId = new Guid("5eefe923-6e61-459c-a985-5859a07cac42"),
                            OrderDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2021, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("6a555dc1-12a3-485e-89c3-a1966b96cefd")
                        },
                        new
                        {
                            Id = new Guid("2c2fa416-ed3e-4b4e-a284-d2c35241ddc9"),
                            CustomerId = new Guid("5eefe923-6e61-459c-a985-5859a07cac42"),
                            OrderDate = new DateTime(2022, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2022, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("1e1e7a85-fa7a-46e1-8ce5-a6ffef1cd237")
                        });
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblOrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblOrderItem_Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("OrderId");

                    b.ToTable("tblOrderItem", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("37a40bec-6ea0-4c99-9a50-d1b4981d1622"),
                            Cost = 8.9900000000000002,
                            MovieId = new Guid("46e5479a-cb0e-4d1b-a388-dae89736fc30"),
                            OrderId = new Guid("73cc1a47-e4e6-442f-a869-9d1d20828689"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("03412211-70bb-49b2-a310-e250f4ba8fd6"),
                            Cost = 9.9900000000000002,
                            MovieId = new Guid("99e7fc84-e21f-471c-b678-d633fa58c353"),
                            OrderId = new Guid("73cc1a47-e4e6-442f-a869-9d1d20828689"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("9ffdc238-4cdc-42fa-8800-862317930065"),
                            Cost = 10.99,
                            MovieId = new Guid("99e7fc84-e21f-471c-b678-d633fa58c353"),
                            OrderId = new Guid("2c2fa416-ed3e-4b4e-a284-d2c35241ddc9"),
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblRating", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblRating_Id");

                    b.ToTable("tblRating", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0df62934-4eaa-4f02-b644-5995ff9207c2"),
                            Description = "G"
                        },
                        new
                        {
                            Id = new Guid("60292baa-fe54-43b5-b943-bb12d859b088"),
                            Description = "PG-13"
                        },
                        new
                        {
                            Id = new Guid("236f43c1-6c28-4f4a-ae87-7c6ae52a63f1"),
                            Description = "PG"
                        },
                        new
                        {
                            Id = new Guid("00ea341c-1e83-48d2-beee-cd54faa7ef3d"),
                            Description = "R"
                        },
                        new
                        {
                            Id = new Guid("32c8a5fd-d63d-4e5d-92e4-192bf71f1287"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a1192b7-66f7-4cb6-86e8-69ddcd23ed1d"),
                            FirstName = "Steve",
                            LastName = "Marin",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "smarin"
                        },
                        new
                        {
                            Id = new Guid("6a555dc1-12a3-485e-89c3-a1966b96cefd"),
                            FirstName = "John",
                            LastName = "Doro",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "jdoro"
                        },
                        new
                        {
                            Id = new Guid("1e1e7a85-fa7a-46e1-8ce5-a6ffef1cd237"),
                            FirstName = "Brian",
                            LastName = "Foote",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "bfoote"
                        },
                        new
                        {
                            Id = new Guid("39183c4a-9cb7-41ae-a660-0585099b6461"),
                            FirstName = "Other",
                            LastName = "Other",
                            Password = "X1BEO/529yeajg8vCpiXXNv/OOk=",
                            UserName = "sophie"
                        });
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblCart", b =>
                {
                    b.HasOne("AJS.DVDCentral.PL2.Entities.tblUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblCartItem", b =>
                {
                    b.HasOne("AJS.DVDCentral.PL2.Entities.tblCart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AJS.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.HasOne("AJS.DVDCentral.PL2.Entities.tblDirector", "Director")
                        .WithMany("tblMovies")
                        .HasForeignKey("DirectorId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_DirectorId");

                    b.HasOne("AJS.DVDCentral.PL2.Entities.tblFormat", "Format")
                        .WithMany("tblMovies")
                        .HasForeignKey("FormatId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_FormatId");

                    b.HasOne("AJS.DVDCentral.PL2.Entities.tblRating", "Rating")
                        .WithMany("tblMovies")
                        .HasForeignKey("RatingId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_RatingId");

                    b.Navigation("Director");

                    b.Navigation("Format");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblMovieGenre", b =>
                {
                    b.HasOne("AJS.DVDCentral.PL2.Entities.tblGenre", "Genre")
                        .WithMany("tblMovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblMovieGenre_GenreId");

                    b.HasOne("AJS.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany("tblMovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblMovieGenre_MovieId");

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.HasOne("AJS.DVDCentral.PL2.Entities.tblCustomer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("fk_tblOrder_CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblOrderItem", b =>
                {
                    b.HasOne("AJS.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AJS.DVDCentral.PL2.Entities.tblOrder", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("fk_tblOrderItem_OrderId");

                    b.Navigation("Movie");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblCustomer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblDirector", b =>
                {
                    b.Navigation("tblMovies");
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblFormat", b =>
                {
                    b.Navigation("tblMovies");
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblGenre", b =>
                {
                    b.Navigation("tblMovieGenres");
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.Navigation("tblMovieGenres");
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("AJS.DVDCentral.PL2.Entities.tblRating", b =>
                {
                    b.Navigation("tblMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
